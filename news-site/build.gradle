
plugins {
	id 'application'
	id "com.github.ben-manes.versions" version "0.39.0"
	id 'org.kordamp.gradle.jdeps' version '0.15.0'
	//id "com.eriwen.gradle.css" version "2.14.0"
	//id "com.eriwen.gradle.js" version "2.14.1"
}

repositories {
	mavenCentral()
}

dependencies {
	implementation project(':jetstart')
	implementation 'com.j2html:j2html:1.5.0'
	implementation 'org.eclipse.jetty:jetty-server:11.0.7'
	implementation 'org.hsqldb:hsqldb:2.6.1'
	implementation 'org.commonmark:commonmark:0.18.0'
	implementation 'com.zaxxer:HikariCP:5.0.0'
}

import java.nio.file.Files

def properties = new Properties()

try(def file = Files.newBufferedReader(projectDir.toPath().resolve('project.properties'))) {
	properties.load(file)
}

processResources {
	from('src/main') {
		include 'image/**', 'xml/**', 'lang/**'
	}
}

jar {
	outputs.upToDateWhen { false }

	def outputDir = sourceSets.main.output.resourcesDir.toPath()

	doFirst {
		//TODO this isn't working properly to include in jar use jar task instead??
		def inputCss = project.projectDir.toPath().resolve('src/main/css/global.scss')
		def outputCss = outputDir.resolve('css/global.css')
		mkdir outputDir
		if(Files.notExists(outputCss) ||
				Files.getLastModifiedTime(inputCss).toInstant()
						.isAfter(Files.getLastModifiedTime(outputCss).toInstant())) {
			exec {
				executable properties.getProperty("sass.path")
				args '--no-source-map', inputCss, outputCss
				standardInput = System.in
				standardOutput = System.out
				errorOutput = System.err
			}.assertNormalExitValue()
		}
	}
}

run {
	mainClass.set('net.ritzow.news.RunSite')
	mainModule.set('net.ritzow.news')

	standardInput = System.in

	jvmArgs '-Dnet.ritzow.certs=' + properties.getProperty('keystore.file'),
			'-Dnet.ritzow.pass=' + properties.getProperty('keystore.password'),
			'-Dnet.ritzow.debug=true'
}